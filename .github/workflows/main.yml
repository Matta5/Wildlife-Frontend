name: E2E Tests and Docker Deploy

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Start application and get port
      id: get-port
      run: |
        # Start the preview server and capture output
        npm run preview > preview.log 2>&1 &
        # Give it some time to start
        sleep 10
        # Check if the log file exists and has content
        if [ ! -f preview.log ] || [ ! -s preview.log ]; then
          echo "Error: preview.log is empty or doesn't exist"
          exit 1
        fi
        # Print the log content for debugging
        echo "Preview log content:"
        cat preview.log
        # Extract the port using a more specific pattern
        PORT=$(grep -o 'Local:   http://localhost:[0-9]\+' preview.log | grep -o '[0-9]\+$' || echo "4174")
        echo "Detected port: $PORT"
        # Verify the port is not empty
        if [ -z "$PORT" ]; then
          echo "Error: Could not detect port, using default 4174"
          PORT=4174
        fi
        echo "PORT=$PORT" >> "$GITHUB_OUTPUT"
        # Verify the server is actually running
        curl -s -o /dev/null -w "%{http_code}" http://localhost:$PORT || echo "Warning: Server not responding yet"

    - name: Wait for server
      run: |
        PORT=${{ steps.get-port.outputs.PORT }}
        echo "Waiting for server on port $PORT..."
        npx wait-on http://localhost:$PORT --timeout 60000 --verbose

    - name: Run Cypress E2E tests
      uses: cypress-io/github-action@v6
      env:
        CYPRESS_BASE_URL: http://localhost:${{ steps.get-port.outputs.PORT }}
      with:
        browser: chrome
        headless: true
        component: false
        record: false
        publish-summary: true

    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots
        path: cypress/screenshots

    - name: Upload Cypress videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos
        path: cypress/videos

  docker-build:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: success() # Only if e2e tests pass
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/wildlife-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/wildlife-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
