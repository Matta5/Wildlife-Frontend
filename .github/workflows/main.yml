name: E2E Tests and Docker Deploy

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Start application and get port
      id: get-port
      run: |
        # Start the preview server and capture output
        npm run preview > preview.log 2>&1 &
        
        # Give it some time to start
        sleep 10
        
        # Print the log content for debugging
        echo "Preview log content:"
        cat preview.log
        
        # Extract the port from Vite's output
        PORT=$(grep -o "Local:   http://localhost:[0-9]*" preview.log | grep -o "[0-9]*$" || echo "4173")
        echo "Detected port: $PORT"
        echo "PORT=$PORT" >> "$GITHUB_OUTPUT"

    - name: Wait for server
      run: |
        PORT=${{ steps.get-port.outputs.PORT }}
        echo "Waiting for server on port $PORT..."
        # Try multiple times with shorter timeouts
        for i in {1..3}; do
          if curl -s -o /dev/null http://localhost:$PORT; then
            echo "Server is responding on port $PORT"
            break
          fi
          echo "Attempt $i: Server not responding, waiting..."
          sleep 5
        done
        
        # Final wait with wait-on
        npx wait-on --timeout 30000 --verbose http://localhost:$PORT

    - name: Run Cypress E2E tests
      uses: cypress-io/github-action@v6
      env:
        CYPRESS_BASE_URL: http://localhost:${{ steps.get-port.outputs.PORT }}
      with:
        browser: chrome
        headless: true
        component: false
        record: false
        publish-summary: true

    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots
        path: cypress/screenshots

    - name: Upload Cypress videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos
        path: cypress/videos

  docker-build:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: success() # Only if e2e tests pass
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/wildlife-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/wildlife-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

        #testing
